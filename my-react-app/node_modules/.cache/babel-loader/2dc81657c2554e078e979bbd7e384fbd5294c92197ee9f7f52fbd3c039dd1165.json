{"ast":null,"code":"var _jsxFileName = \"C:\\\\Compiles C AVIA\\\\Hackaton 2024\\\\my-personal-diary\\\\my-react-app\\\\src\\\\PromptArea.js\",\n  _s = $RefreshSig$();\n// PromptGenerator.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptGenerator = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n\n  // Function to fetch a new prompt from the server\n  const fetchPrompt = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/prompt');\n      console.log(response.data);\n      setPrompt(response.data.prompt);\n    } catch (error) {\n      console.error(\"Error fetching prompt:\", error);\n    }\n  };\n\n  // Fetch initial prompt on component mount\n  useEffect(() => {\n    fetchPrompt();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prompt-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPrompt,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSync\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PromptGenerator, \"q9ulJNGlF34YGoZeGL6zn8p4q8Q=\");\n_c = PromptGenerator;\nexport default PromptGenerator;\nvar _c;\n$RefreshReg$(_c, \"PromptGenerator\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faSync","jsxDEV","_jsxDEV","PromptGenerator","_s","prompt","setPrompt","fetchPrompt","response","get","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","icon","_c","$RefreshReg$"],"sources":["C:/Compiles C AVIA/Hackaton 2024/my-personal-diary/my-react-app/src/PromptArea.js"],"sourcesContent":["// PromptGenerator.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PromptGenerator = () => {\r\n    const [prompt, setPrompt] = useState(\"\");\r\n\r\n    // Function to fetch a new prompt from the server\r\n    const fetchPrompt = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/prompt');\r\n            console.log(response.data)\r\n            setPrompt(response.data.prompt);\r\n        } catch (error) {\r\n            console.error(\"Error fetching prompt:\", error);\r\n        }\r\n    };\r\n\r\n    // Fetch initial prompt on component mount\r\n    useEffect(() => {\r\n        fetchPrompt();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"prompt-container\">\r\n            <div className=\"prompt-content\">\r\n                <span>{prompt}</span>\r\n                <button onClick={fetchPrompt} style={{marginLeft:\"10px\"}}>\r\n                    <FontAwesomeIcon icon={faSync} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PromptGenerator;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,8BAA8B,CAAC;MAChEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BN,SAAS,CAACE,QAAQ,CAACI,IAAI,CAACP,MAAM,CAAC;IACnC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACZU,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7Bb,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3Bb,OAAA;QAAAa,QAAA,EAAOV;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBjB,OAAA;QAAQkB,OAAO,EAAEb,WAAY;QAACc,KAAK,EAAE;UAACC,UAAU,EAAC;QAAM,CAAE;QAAAP,QAAA,eACrDb,OAAA,CAACH,eAAe;UAACwB,IAAI,EAAEvB;QAAO;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACf,EAAA,CA7BID,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}