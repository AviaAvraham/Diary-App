{"ast":null,"code":"var _jsxFileName = \"C:\\\\Compiles C AVIA\\\\Hackaton 2024\\\\my-personal-diary\\\\my-react-app\\\\src\\\\NoteList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './NoteList.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  editNote,\n  deleteNote\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/getNotes');\n        setNotes(response.data); // Update notes state with fetched data\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData(); // Call fetchData function when component mounts\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  console.log(\"notes are \", notes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-container\",\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note-date\",\n          children: note.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrashAlt,\n          className: \"delete-icon\",\n          onClick: () => deleteNote(note.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        children: note.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(NoteList, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faTrashAlt","jsxDEV","_jsxDEV","NoteList","editNote","deleteNote","_s","notes","setNotes","fetchData","response","get","data","error","console","log","className","children","map","note","date","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","id","message","_c","$RefreshReg$"],"sources":["C:/Compiles C AVIA/Hackaton 2024/my-personal-diary/my-react-app/src/NoteList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NoteList.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NoteList = ({ editNote, deleteNote }) => {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/getNotes');\r\n        setNotes(response.data); // Update notes state with fetched data\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData(); // Call fetchData function when component mounts\r\n  }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n  console.log(\"notes are \", notes);\r\n\r\n  return (\r\n      <div className=\"note-container\">\r\n        {notes.map((note) => (\r\n          <div className=\"note\" key={note.id}>\r\n            <div className=\"note-header\">\r\n              <span className=\"note-date\">{note.date}</span>\r\n              <FontAwesomeIcon icon={faTrashAlt} className=\"delete-icon\" onClick={() => deleteNote(note.id)} />\r\n            </div>\r\n            <div className=\"note-content\">{note.message}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default NoteList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC;QAClEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERK,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,KAAK,CAAC;EAEhC,oBACIL,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BV,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACdjB,OAAA;MAAKc,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBf,OAAA;QAAKc,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bf,OAAA;UAAMc,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEE,IAAI,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9CtB,OAAA,CAACH,eAAe;UAAC0B,IAAI,EAAEzB,UAAW;UAACgB,SAAS,EAAC,aAAa;UAACU,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACc,IAAI,CAACQ,EAAE;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eACNtB,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEE,IAAI,CAACS;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GALzBL,IAAI,CAACQ,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAM7B,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ,CAAC;AAAClB,EAAA,CA/BIH,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}